{"version":3,"sources":["components/commons/AspectRatio.tsx","components/slide-dautu/bg-desktop.webp","components/slide-dautu/mobile.tsx"],"names":["AspectRatio","styled","Box","props","ratio","defaultProps","SwiperCore","use","Pagination","Autoplay","Bg","BgBox","StyledText","Typography","StyledImage","StyleContent","TitleText","SpecialText","Desktop","React","useRef","useWindowDimensions","width","height","console","log","sx","position","top","left","right","src","bg","component","slidesPerView","centeredSlides","loop","pagination","clickable","autoplay","delay","pauseOnMouseEnter","breakpoints","slidesData","slides","map","slide","index","className","href","params","image","layers","text"],"mappings":"kKAIMA,EAAcC,YAAOC,IAAPD,CAAH,mhBAGQ,SAACE,GAAD,OAAgBA,EAAMC,SAkBV,SAACD,GAAD,OAAgBA,EAAMC,SAGhC,SAACD,GAAD,OAAgBA,EAAMC,SAKjDJ,EAAYK,aAAe,CACzBD,MAAO,OAGMJ,O,iCCrCA,QAA0B,yC,gNCUzCM,IAAWC,IAAI,CAACC,IAAYC,MAK5B,IAAMC,EAAKT,YAAO,MAAPA,CAAH,+GAMFU,EAAQV,YAAOC,IAAPD,CAAH,oNAaLW,EAAaX,YAAOY,IAAPZ,CAAH,6bAoBVa,EAAcb,YAAOC,IAAPD,CAAH,6NAEQ,SAACE,GAAD,OAAgBA,EAAMC,SAWzCW,EAAed,YAAOC,IAAPD,CAAH,0rDAqEZe,EAAYf,YAAOY,IAAPZ,CAAH,2jBA0BTgB,EAAchB,YAAOY,IAAPZ,CAAH,uMAUF,SAASiB,EAAQf,GACRgB,IAAMC,OAAO,MAAnC,IACA,EAA0BC,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAEf,OADAC,QAAQC,IAAIH,EAAOC,GAEjB,eAAC,IAAD,WACE,cAACZ,EAAD,CACEe,GAAI,CACFC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,GALX,SAQE,cAAC,IAAD,CAAa1B,MAAK,UAAKkB,EAAL,YAAwB,EAATC,EAAc,KAA/C,SACE,cAACb,EAAD,CAAIqB,IAAKC,UAGb,cAAC,IAAD,UACE,eAACjB,EAAD,WACE,eAACC,EAAD,oCACS,cAACC,EAAD,CAAagB,UAAW,OAAxB,6BACP,uBAFF,8CAKA,cAAC,IAAD,CACEC,cAAe,EACfC,gBAAgB,EAChBC,MAAM,EACNC,WAAY,CACVC,WAAW,GAEbC,SAAU,CACRC,MAAO,IACPC,mBAAmB,GAErBC,YAAa,CACX,IAAK,CACHR,cAAe,IAbrB,SAiBG/B,EAAMwC,WAAWC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAC3B,cAAC,IAAD,UACE,sBAAKC,UAAU,aAAf,UACE,mBAAGC,KAAMH,EAAMI,OAAOlB,GAAGmB,MAAzB,SACE,cAACrC,EAAD,CAAaV,MAAO,EAAI,EAAxB,SACE,qBAAK2B,IAAKe,EAAMI,OAAOlB,GAAGmB,YAG9B,cAACvC,EAAD,UAAakC,EAAMM,OAAO,GAAGC,WAPfN","file":"static/js/18.81496206.chunk.js","sourcesContent":["import { Box, styled } from \"@mui/material\";\n// import { AspectRatio as BaseAspectRatio } from 'react-aspect-ratio'\n\nexport type AspectRatioProps = { ratio?: string | number };\nconst AspectRatio = styled(Box)<AspectRatioProps>`\n  position: relative;\n  @supports (aspect-ratio: 1/1) {\n    aspect-ratio: calc(${(props: any) => props.ratio});\n  }\n  > :first-child {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n  > img {\n    height: auto;\n  }\n  ::before {\n    content: \"\";\n    display: block;\n    width: 100%;\n    @supports not (aspect-ratio: 1/1) {\n      height: 0;\n      padding-bottom: calc(100% / (${(props: any) => props.ratio}));\n    }\n    @supports (aspect-ratio: 1/1) {\n      aspect-ratio: calc(${(props: any) => props.ratio});\n    }\n  }\n`;\n\nAspectRatio.defaultProps = {\n  ratio: \"1/1\",\n};\n\nexport default AspectRatio;\n","export default __webpack_public_path__ + \"static/media/bg-desktop.3ce90e71.webp\";","import { HoanMySlidesData } from \"../assets/hoanmy\";\nimport useWindowDimensions from \"../commons/responsives\";\nimport { Box, styled, Typography } from \"@mui/material\";\nimport AspectRatio from \"../commons/AspectRatio\";\nimport bg from \"./bg-desktop.webp\";\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\nimport SwiperCore, { Pagination, Autoplay } from \"swiper\";\nimport React from \"react\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\n\nSwiperCore.use([Pagination, Autoplay]);\ntype DesktopProps = {\n  slidesData: HoanMySlidesData;\n};\n\nconst Bg = styled(\"img\")`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  object-position: center;\n`;\nconst BgBox = styled(Box)`\n  &:after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.46);\n    display: block;\n    content: \"\";\n  }\n`;\n\nconst StyledText = styled(Typography)`\n  color: #a01f26;\n  font-weight: 400;\n  text-align: center;\n  font-size: 16px;\n  font-family: Montserrat;\n  display: inline-block;\n  will-change: transform;\n  transition: transform 0.6s ease;\n  transform: scale(1);\n  transform-origin: top center;\n  margin-top: 20px;\n  .center & {\n    transform: translateY(-0.5rem) scale(0.75);\n  }\n  @media screen and (max-width: 1366px) {\n    font-size: 14px;\n  }\n`;\n\nconst StyledImage = styled(Box)<{ ratio?: string | number }>`\n  @supports (aspect-ratio: 1/1) {\n    aspect-ratio: calc(${(props: any) => props.ratio});\n  }\n  width: 100%;\n  > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-position: center;\n  }\n`;\n\nconst StyleContent = styled(Box)`\n  display: flex;\n  flex-flow: wrap;\n  justify-content: center;\n  height: 100vh;\n  @media screen and (max-width: 425px) {\n    display: block;\n    height: auto;\n  }\n  > .swiper {\n    aspect-ratio: calc(4 / 1);\n    margin: 0 50px;\n    @media screen and (max-width: 1366px) {\n      aspect-ratio: unset;\n      margin: 0;\n    }\n    @media screen and (max-width: 425px) {\n      margin: 0 20px;\n      padding: 40px 0;\n    }\n    .swiper-slide {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: all 200ms linear;\n      transform: scale(0.8);\n      &.swiper-slide-active {\n        transform: scale(1);\n        .item-slide p {\n          font-weight: bold;\n        }\n      }\n      .item-slide {\n        text-align: center;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n      }\n    }\n    > .swiper-pagination {\n      display: flex;\n      grid-template-columns: repeat(6, 1fr);\n      grid-gap: 2rem;\n      justify-content: center;\n      .swiper-pagination-bullet {\n        background-color: transparent;\n        transition: all 0.3s ease-in-out;\n        cursor: pointer;\n        height: 0.7rem;\n        width: 0.7rem;\n        border-radius: 50%;\n        border: 1px solid #333;\n        &.swiper-pagination-bullet-active {\n          cursor: pointer;\n          height: 0.7rem;\n          width: 0.7rem;\n          border-radius: 50%;\n          border: 1px solid #333;\n          border-color: #a01f26;\n          background-color: #a01f26;\n          outline: 1px solid #a01f26;\n          outline-offset: 0.45rem;\n        }\n      }\n    }\n  }\n`;\n\nconst TitleText = styled(Typography)`\n  text-transform: uppercase;\n  font-family: Megante;\n  font-size: 48px;\n  position: relative;\n  background: -webkit-linear-gradient(\n    248deg,\n    #effac2 30%,\n    #d1a32c 40%,\n    #effac2 50%,\n    #d1a32c 65%\n  );\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-align: center;\n  margin-top: 150px;\n  margin-bottom: 100px;\n  @media screen and (max-width: 1366px) {\n    margin: 50px 0 0 0;\n  }\n  @media screen and (max-width: 425px) {\n    font-size: 28px;\n    margin: 70px 0 30px 0;\n  }\n`;\n\nconst SpecialText = styled(Typography)`\n  font-family: Rosellinda;\n  font-size: 78px;\n  text-transform: initial;\n  display: inline-block;\n  @media screen and (max-width: 425px) {\n    font-size: 48px;\n  }\n`;\n\nexport default function Desktop(props: DesktopProps): JSX.Element {\n  const paginationRef = React.useRef(null);\n  const { width, height } = useWindowDimensions();\n  console.log(width, height);\n  return (\n    <Box>\n      <BgBox\n        sx={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n        }}\n      >\n        <AspectRatio ratio={`${width}/${(height * 2) / 3.5}`}>\n          <Bg src={bg} />\n        </AspectRatio>\n      </BgBox>\n      <SRLWrapper>\n        <StyleContent>\n          <TitleText>\n            Đầu tư <SpecialText component={\"span\"}>Hoàn Mỹ</SpecialText>\n            <br />\n            Giá trị vượt trội\n          </TitleText>\n          <Swiper\n            slidesPerView={1}\n            centeredSlides={true}\n            loop={true}\n            pagination={{\n              clickable: true,\n            }}\n            autoplay={{\n              delay: 5000,\n              pauseOnMouseEnter: true,\n            }}\n            breakpoints={{\n              768: {\n                slidesPerView: 3,\n              },\n            }}\n          >\n            {props.slidesData.slides.map((slide, index) => (\n              <SwiperSlide key={index}>\n                <div className=\"item-slide\">\n                  <a href={slide.params.bg.image}>\n                    <StyledImage ratio={4 / 3}>\n                      <img src={slide.params.bg.image} />\n                    </StyledImage>\n                  </a>\n                  <StyledText>{slide.layers[0].text}</StyledText>\n                </div>\n              </SwiperSlide>\n            ))}\n          </Swiper>\n        </StyleContent>\n      </SRLWrapper>\n    </Box>\n  );\n}\n"],"sourceRoot":""}