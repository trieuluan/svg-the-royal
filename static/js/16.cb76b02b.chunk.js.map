{"version":3,"sources":["components/slide-dautuhoanmy/motion-slide.tsx","components/slide-dautuhoanmy/use-cycled-list.tsx","components/commons/utils.ts","components/slide-thu-vien/desktop.tsx","components/commons/AspectRatio.tsx"],"names":["Bullet","styled","Box","props","isActive","css","MotionBox","m","MotionSlideInner","forwardRef","ref","animationSpeed","indicatorSxProps","centerMode","sx","outerSx","gap","render","useState","speed","setSpeed","setStep","list","n","size","doubledList","useRef","Children","map","child","i","cloneElement","key","current","slice","returnedList","setReturnedList","pos","setPos","direction","setDirection","middle","useMemo","rs","length","next","useCallback","step","newPos","newReturnedList","produce","draft","range","forEach","shift","_newPos","push","previous","headPos","pop","unshift","actualCurrent","total","useCycledList","toArray","children","slidesToShow","newChildren","prev","payload","useEffect","useImperativeHandle","center","Math","round","intervalRef","setInterval","clearInterval","undefined","slideWidth","totalGap","width","isCenter","index","variants","initial","opacity","x","flex","animate","exit","innerVariants","scale","goToIndex","forwardOnly","_index","setTimeout","display","alignItems","ml","mr","AnimatePresence","layout","transition","duration","style","originX","originY","justifyContent","custom","className","onClick","gridTemplateColumns","gridGap","MotionSlide","Desktop","useWindowDimensions","height","position","top","left","bottom","overflow","pb","alignSelf","flexDirection","item","id","ratio","src","image","AspectRatio","defaultProps"],"mappings":"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","file":"static/js/16.cb76b02b.chunk.js","sourcesContent":["import {\r\n  Children,\r\n  cloneElement,\r\n  forwardRef,\r\n  PropsWithChildren,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { CycledListPayload, useCycledList } from \"./use-cycled-list\";\r\nimport { Box, css, styled, SxProps } from \"@mui/material\";\r\nimport { AnimatePresence, m } from \"framer-motion\";\r\nimport { SizeMe, SizeMeProps } from \"react-sizeme\";\r\nimport { range } from \"lodash\";\r\n\r\nconst Bullet = styled(Box)<{ isActive: boolean }>`\r\n  cursor: pointer;\r\n  height: 0.7rem;\r\n  width: 0.7rem;\r\n  border-radius: 50%;\r\n  border: 1px solid #333;\r\n  ${(props: any) =>\r\n    props.isActive &&\r\n    css`\r\n      border-color: #a01f26;\r\n      background-color: #a01f26;\r\n      outline: 1px solid #a01f26;\r\n      outline-offset: 0.45rem;\r\n    `}\r\n`;\r\n\r\ntype MotionSlideProps = PropsWithChildren<\r\n  {\r\n    slidesToShow: number;\r\n    speed?: number;\r\n    animationSpeed?: number;\r\n    indicatorSxProps?: SxProps;\r\n    centerMode?: boolean;\r\n    sx?: SxProps;\r\n    outerSx?: SxProps;\r\n    gap?: number;\r\n    initial?: number;\r\n    render?: (payload: CycledListPayload) => ReactNode;\r\n  } & SizeMeProps\r\n>;\r\n\r\nexport type MotionSlideHandle = {\r\n  next(): void;\r\n  prev(): void;\r\n};\r\n\r\nconst MotionBox = m(Box);\r\n\r\nconst MotionSlideInner = forwardRef<MotionSlideHandle, MotionSlideProps>(\r\n  function MotionSlide(props, ref): JSX.Element {\r\n    const {\r\n      animationSpeed = 0.35,\r\n      indicatorSxProps,\r\n      centerMode,\r\n      sx,\r\n      outerSx,\r\n      gap = 16,\r\n      render,\r\n    } = props;\r\n    const [speed, setSpeed] = useState(props.speed);\r\n    const [step, setStep] = useState(1);\r\n    const [newChildren, prev, next, payload] = useCycledList(\r\n        Children.toArray(props.children) as unknown as ReactElement[],\r\n        {\r\n          size: props.slidesToShow + 2,\r\n        }\r\n      ),\r\n      { current, direction, total } = payload;\r\n\r\n    useEffect(() => {\r\n      // console.log(current);\r\n    }, [current]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      next,\r\n      prev,\r\n    }));\r\n\r\n    // useEffect(() => {\r\n    //   console.log(newChildren.map((c) => c.key));\r\n    // }, [newChildren]);\r\n\r\n    const center = useMemo(\r\n      () => Math.round((props.slidesToShow + 1) / 2),\r\n      [props.slidesToShow]\r\n    );\r\n\r\n    const intervalRef = useRef<NodeJS.Timeout>();\r\n    useEffect(() => {\r\n      setSpeed(props.speed);\r\n    }, [props.speed]);\r\n    useEffect(() => {\r\n      if (speed) intervalRef.current = setInterval(() => next(), speed);\r\n      else {\r\n        if (intervalRef.current) clearInterval(intervalRef.current);\r\n        intervalRef.current = undefined;\r\n      }\r\n      return () => {\r\n        if (intervalRef.current) clearInterval(intervalRef.current);\r\n      };\r\n    }, [speed, next]);\r\n\r\n    const slideWidth = useMemo(() => {\r\n      const totalGap = gap * (props.slidesToShow - 1);\r\n      // noinspection PointlessArithmeticExpressionJS\r\n      return (\r\n        (props.size.width! * 1.0 - totalGap) /\r\n        (props.slidesToShow + (centerMode ? 1 : 0))\r\n      );\r\n    }, [props.slidesToShow, props.size, gap, centerMode]);\r\n\r\n    const isCenter = useCallback(\r\n      (index: number) => {\r\n        if (!centerMode) return false;\r\n        return index === center;\r\n      },\r\n      [centerMode, center]\r\n    );\r\n\r\n    const variants = useMemo(() => {\r\n        return {\r\n          initial: {\r\n            opacity: 0,\r\n            x: direction === \"prev\" ? \"-200%\" : \"200%\",\r\n            flex: 0,\r\n          },\r\n          animate: ({ index }: { index: number }) => ({\r\n            opacity: index === 0 || index === props.slidesToShow + 1 ? 0 : 1,\r\n            x: 0,\r\n            flex: isCenter(index) ? 2 : 1,\r\n          }),\r\n          exit: {\r\n            opacity: 0,\r\n            x: direction === \"prev\" ? \"200%\" : \"-200%\",\r\n            flex: 0,\r\n          },\r\n        };\r\n      }, [direction, isCenter, props.slidesToShow]),\r\n      innerVariants = useMemo(\r\n        () => ({\r\n          initial: {\r\n            // display: \"none\",\r\n            width: 0,\r\n          },\r\n          animate: ({ index }: { index: number }) => ({\r\n            // display: \"block\",\r\n            width: slideWidth,\r\n            scale: isCenter(index) ? 2 : 1,\r\n          }),\r\n          exit: {\r\n            // display: \"none\",\r\n            width: 0,\r\n          },\r\n        }),\r\n        [isCenter, slideWidth]\r\n      );\r\n\r\n    const goToIndex = (index: number, forwardOnly = false) => {\r\n      if (current === index) return;\r\n      let _index = index;\r\n      if (forwardOnly && current >= index) _index += props.slidesToShow;\r\n      setSpeed(0);\r\n      if (current < _index) {\r\n        //next n step\r\n        setStep(_index - current);\r\n        next(_index - current);\r\n        setTimeout(() => {\r\n          setSpeed(props.speed);\r\n          setStep(1);\r\n        }, (_index - current + 1) * (animationSpeed ?? 550));\r\n      } else {\r\n        setStep(current - _index);\r\n        prev(current - _index);\r\n        setTimeout(() => {\r\n          setSpeed(props.speed);\r\n          setStep(1);\r\n        }, (current - _index + 1) * (animationSpeed ?? 550));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Box sx={outerSx}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            gap: `${gap}px`,\r\n            ml: `-${slideWidth + gap}px`,\r\n            mr: `-${slideWidth + gap}px`,\r\n            ...sx,\r\n          }}\r\n        >\r\n          <AnimatePresence initial={false}>\r\n            {newChildren.map((child, index) => {\r\n              return (\r\n                <MotionBox\r\n                  layout\r\n                  key={`${child.key}`}\r\n                  transition={{ duration: animationSpeed }}\r\n                  variants={variants}\r\n                  initial={\"initial\"}\r\n                  animate={\"animate\"}\r\n                  exit={\"exit\"}\r\n                  style={{ originX: 0.5, originY: 0.5 }}\r\n                  sx={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  custom={{ index }}\r\n                  className={index === center ? \"center\" : \"\"}\r\n                >\r\n                  <MotionBox\r\n                    layout\r\n                    variants={innerVariants}\r\n                    transition={{ duration: animationSpeed }}\r\n                    custom={{ index }}\r\n                    style={{\r\n                      width: slideWidth,\r\n                    }}\r\n                  >\r\n                    {cloneElement(child, {\r\n                      onClick:\r\n                        child.props[\"data-index\"] * 1 === center\r\n                          ? child.props.onClick\r\n                          : () => {\r\n                              // console.log(child.props[\"data-index\"] * 1);\r\n                              goToIndex(child.props[\"data-index\"] * 1, true);\r\n                            },\r\n                    })}\r\n                  </MotionBox>\r\n                </MotionBox>\r\n              );\r\n            })}\r\n            {render?.(payload)}\r\n          </AnimatePresence>\r\n        </Box>\r\n        <Box sx={indicatorSxProps}>\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: `repeat(${total},1fr)`,\r\n              gridGap: \"2rem\",\r\n            }}\r\n          >\r\n            {range(total).map((index) => (\r\n              <Bullet\r\n                isActive={index === current}\r\n                onClick={() => {\r\n                  goToIndex(index);\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n);\r\n\r\nconst MotionSlide = forwardRef<\r\n  MotionSlideHandle,\r\n  Omit<MotionSlideProps, \"size\">\r\n>(function (props, ref) {\r\n  return (\r\n    <SizeMe>\r\n      {({ size }) => <MotionSlideInner ref={ref} size={size} {...props} />}\r\n    </SizeMe>\r\n  );\r\n});\r\n\r\nexport default MotionSlide;\r\n","import {\r\n  Children,\r\n  cloneElement,\r\n  ReactElement,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport produce, { Draft } from \"immer\";\r\nimport { range } from \"lodash\";\r\nimport { mod } from \"../commons/utils\";\r\n\r\nexport type UseCycledListOptions = {\r\n  size: number;\r\n};\r\ntype Callback = (step?: number) => void;\r\nexport type CycledListPayload = {\r\n  current: number;\r\n  actualCurrent: number;\r\n  direction: \"prev\" | \"next\";\r\n  total: number;\r\n};\r\n\r\nexport function useCycledList<T extends ReactElement>(\r\n  list: T[],\r\n  { size }: UseCycledListOptions\r\n): [T[], Callback, Callback, CycledListPayload] {\r\n  const doubledList = useRef([\r\n    ...list,\r\n    ...(Children.map(list, (child, i) =>\r\n      cloneElement(child, { key: `cloned__${i}` })\r\n    ) as unknown as T[]),\r\n  ]);\r\n  const [returnedList, setReturnedList] = useState<T[]>(() =>\r\n      doubledList.current.slice(0, size)\r\n    ),\r\n    [pos, setPos] = useState(size - 1),\r\n    [direction, setDirection] = useState<\"prev\" | \"next\">(\"next\");\r\n  const middle = useMemo(() => {\r\n    let rs = pos - (size - 1) / 2;\r\n    if (rs < 0) rs += list.length;\r\n    if (rs >= list.length) rs -= list.length;\r\n    return rs;\r\n  }, [pos, size, list.length]);\r\n\r\n  const next = useCallback(\r\n    (step: number = 1) => {\r\n      const newPos = (pos + step) % doubledList.current.length;\r\n      const newReturnedList = produce(returnedList, (draft) => {\r\n        range(step).forEach(() => draft.shift());\r\n        range(step).forEach((i: number) => {\r\n          const _newPos = (pos + i + 1) % doubledList.current.length;\r\n          draft.push(doubledList.current[_newPos] as unknown as Draft<T>);\r\n        });\r\n      });\r\n      setDirection(\"next\");\r\n      setPos(newPos);\r\n      setReturnedList(newReturnedList);\r\n    },\r\n    [returnedList, pos]\r\n  );\r\n\r\n  const previous = useCallback(\r\n    (step: number = 1) => {\r\n      let newPos = pos - step;\r\n      if (newPos < 0) newPos += doubledList.current.length;\r\n      let headPos = pos - size;\r\n      const newReturnedList = produce(returnedList, (draft) => {\r\n        range(step).forEach(() => draft.pop());\r\n        range(step).forEach(() => {\r\n          headPos--;\r\n          if (headPos < 0) headPos += doubledList.current.length;\r\n          draft.unshift(doubledList.current[headPos] as unknown as Draft<T>);\r\n        });\r\n      });\r\n      setDirection(\"prev\");\r\n      setPos(newPos);\r\n      setReturnedList(newReturnedList);\r\n    },\r\n    [pos, size, returnedList]\r\n  );\r\n\r\n  return [\r\n    returnedList,\r\n    previous,\r\n    next,\r\n    {\r\n      current: middle,\r\n      actualCurrent: mod(middle - 1, size),\r\n      direction,\r\n      total: list.length,\r\n    },\r\n  ];\r\n}\r\n","export function mod(n: number, m: number) {\r\n  return ((n % m) + m) % m;\r\n}\r\n","import { SlideThuVienProps } from \"./types\";\r\nimport useWindowDimensions from \"../commons/responsives\";\r\nimport { Box } from \"@mui/material\";\r\nimport MotionSlide from \"../slide-dautuhoanmy/motion-slide\";\r\nimport AspectRatio from \"../commons/AspectRatio\";\r\n\r\nexport default function Desktop({ list }: SlideThuVienProps): JSX.Element {\r\n  const { width, height } = useWindowDimensions();\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: \"100vw\",\r\n          height: \"100vh\",\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          bottom: 0,\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <MotionSlide\r\n          slidesToShow={1}\r\n          speed={3000}\r\n          animationSpeed={0.6}\r\n          indicatorSxProps={{\r\n            width: \"auto\",\r\n            pb: 4,\r\n            alignSelf: \"center\",\r\n          }}\r\n          outerSx={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          {list.map((item, index) => (\r\n            <AspectRatio\r\n              key={item.id}\r\n              data-key={item.id}\r\n              data-index={index}\r\n              ratio={`${width}/${height}`}\r\n            >\r\n              <img src={item.image} />\r\n            </AspectRatio>\r\n          ))}\r\n        </MotionSlide>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Box, styled } from \"@mui/material\";\r\n// import { AspectRatio as BaseAspectRatio } from 'react-aspect-ratio'\r\n\r\nexport type AspectRatioProps = { ratio?: string | number };\r\nconst AspectRatio = styled(Box)<AspectRatioProps>`\r\n  position: relative;\r\n  @supports (aspect-ratio: 1/1) {\r\n    aspect-ratio: calc(${(props: any) => props.ratio});\r\n  }\r\n  > :first-child {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  > img {\r\n    height: auto;\r\n  }\r\n  ::before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    @supports not (aspect-ratio: 1/1) {\r\n      height: 0;\r\n      padding-bottom: calc(100% / (${(props: any) => props.ratio}));\r\n    }\r\n    @supports (aspect-ratio: 1/1) {\r\n      aspect-ratio: calc(${(props: any) => props.ratio});\r\n    }\r\n  }\r\n`;\r\n\r\nAspectRatio.defaultProps = {\r\n  ratio: \"1/1\",\r\n};\r\n\r\nexport default AspectRatio;\r\n"],"sourceRoot":""}