{"version":3,"sources":["components/commons/AspectRatio.tsx","components/slide-dautuhoanmy/motion-slide.tsx","components/slide-dautuhoanmy/use-cycled-list.tsx","components/commons/utils.ts","components/slide-thu-vien/desktop.tsx"],"names":["AspectRatio","styled","Box","props","ratio","defaultProps","Bullet","isActive","css","MotionBox","m","MotionSlideInner","forwardRef","ref","animationSpeed","indicatorSxProps","centerMode","sx","outerSx","gap","render","useState","speed","setSpeed","setStep","list","n","size","doubledList","useRef","Children","map","child","i","cloneElement","key","current","slice","returnedList","setReturnedList","pos","setPos","direction","setDirection","middle","useMemo","rs","length","next","useCallback","step","newPos","newReturnedList","produce","draft","range","forEach","shift","_newPos","push","previous","headPos","pop","unshift","actualCurrent","total","useCycledList","toArray","children","slidesToShow","newChildren","prev","payload","useEffect","useImperativeHandle","center","Math","round","intervalRef","setInterval","clearInterval","undefined","slideWidth","totalGap","width","isCenter","index","variants","initial","opacity","x","flex","animate","exit","innerVariants","scale","goToIndex","forwardOnly","_index","setTimeout","display","alignItems","ml","mr","AnimatePresence","layout","transition","duration","style","originX","originY","justifyContent","custom","className","onClick","gridTemplateColumns","gridGap","MotionSlide","Desktop","useWindowDimensions","height","position","top","left","bottom","overflow","pb","alignSelf","flexDirection","item","id","src","image"],"mappings":"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","file":"static/js/19.3da2efac.chunk.js","sourcesContent":["import { Box, styled } from \"@mui/material\";\n// import { AspectRatio as BaseAspectRatio } from 'react-aspect-ratio'\n\nexport type AspectRatioProps = { ratio?: string | number };\nconst AspectRatio = styled(Box)<AspectRatioProps>`\n  position: relative;\n  @supports (aspect-ratio: 1/1) {\n    aspect-ratio: calc(${(props: any) => props.ratio});\n  }\n  > :first-child {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n  > img {\n    height: auto;\n  }\n  ::before {\n    content: \"\";\n    display: block;\n    width: 100%;\n    @supports not (aspect-ratio: 1/1) {\n      height: 0;\n      padding-bottom: calc(100% / (${(props: any) => props.ratio}));\n    }\n    @supports (aspect-ratio: 1/1) {\n      aspect-ratio: calc(${(props: any) => props.ratio});\n    }\n  }\n`;\n\nAspectRatio.defaultProps = {\n  ratio: \"1/1\",\n};\n\nexport default AspectRatio;\n","import {\n  Children,\n  cloneElement,\n  forwardRef,\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { CycledListPayload, useCycledList } from \"./use-cycled-list\";\nimport { Box, css, styled, SxProps } from \"@mui/material\";\nimport { AnimatePresence, m } from \"framer-motion\";\nimport { SizeMe, SizeMeProps } from \"react-sizeme\";\nimport { range } from \"lodash\";\n\nconst Bullet = styled(Box)<{ isActive: boolean }>`\n  cursor: pointer;\n  height: 0.7rem;\n  width: 0.7rem;\n  border-radius: 50%;\n  border: 1px solid #333;\n  ${(props: any) =>\n    props.isActive &&\n    css`\n      border-color: #a01f26;\n      background-color: #a01f26;\n      outline: 1px solid #a01f26;\n      outline-offset: 0.45rem;\n    `}\n`;\n\ntype MotionSlideProps = PropsWithChildren<\n  {\n    slidesToShow: number;\n    speed?: number;\n    animationSpeed?: number;\n    indicatorSxProps?: SxProps;\n    centerMode?: boolean;\n    sx?: SxProps;\n    outerSx?: SxProps;\n    gap?: number;\n    initial?: number;\n    render?: (payload: CycledListPayload) => ReactNode;\n  } & SizeMeProps\n>;\n\nexport type MotionSlideHandle = {\n  next(): void;\n  prev(): void;\n};\n\nconst MotionBox = m(Box);\n\nconst MotionSlideInner = forwardRef<MotionSlideHandle, MotionSlideProps>(\n  function MotionSlide(props, ref): JSX.Element {\n    const {\n      animationSpeed = 0.35,\n      indicatorSxProps,\n      centerMode,\n      sx,\n      outerSx,\n      gap = 16,\n      render,\n    } = props;\n    const [speed, setSpeed] = useState(props.speed);\n    const [step, setStep] = useState(1);\n    const [newChildren, prev, next, payload] = useCycledList(\n        Children.toArray(props.children) as unknown as ReactElement[],\n        {\n          size: props.slidesToShow + 2,\n        }\n      ),\n      { current, direction, total } = payload;\n\n    useEffect(() => {\n      // console.log(current);\n    }, [current]);\n\n    useImperativeHandle(ref, () => ({\n      next,\n      prev,\n    }));\n\n    // useEffect(() => {\n    //   console.log(newChildren.map((c) => c.key));\n    // }, [newChildren]);\n\n    const center = useMemo(\n      () => Math.round((props.slidesToShow + 1) / 2),\n      [props.slidesToShow]\n    );\n\n    const intervalRef = useRef<NodeJS.Timeout>();\n    useEffect(() => {\n      setSpeed(props.speed);\n    }, [props.speed]);\n    useEffect(() => {\n      if (speed) intervalRef.current = setInterval(() => next(), speed);\n      else {\n        if (intervalRef.current) clearInterval(intervalRef.current);\n        intervalRef.current = undefined;\n      }\n      return () => {\n        if (intervalRef.current) clearInterval(intervalRef.current);\n      };\n    }, [speed, next]);\n\n    const slideWidth = useMemo(() => {\n      const totalGap = gap * (props.slidesToShow - 1);\n      // noinspection PointlessArithmeticExpressionJS\n      return (\n        (props.size.width! * 1.0 - totalGap) /\n        (props.slidesToShow + (centerMode ? 1 : 0))\n      );\n    }, [props.slidesToShow, props.size, gap, centerMode]);\n\n    const isCenter = useCallback(\n      (index: number) => {\n        if (!centerMode) return false;\n        return index === center;\n      },\n      [centerMode, center]\n    );\n\n    const variants = useMemo(() => {\n        return {\n          initial: {\n            opacity: 0,\n            x: direction === \"prev\" ? \"-200%\" : \"200%\",\n            flex: 0,\n          },\n          animate: ({ index }: { index: number }) => ({\n            opacity: index === 0 || index === props.slidesToShow + 1 ? 0 : 1,\n            x: 0,\n            flex: isCenter(index) ? 2 : 1,\n          }),\n          exit: {\n            opacity: 0,\n            x: direction === \"prev\" ? \"200%\" : \"-200%\",\n            flex: 0,\n          },\n        };\n      }, [direction, isCenter, props.slidesToShow]),\n      innerVariants = useMemo(\n        () => ({\n          initial: {\n            // display: \"none\",\n            width: 0,\n          },\n          animate: ({ index }: { index: number }) => ({\n            // display: \"block\",\n            width: slideWidth,\n            scale: isCenter(index) ? 2 : 1,\n          }),\n          exit: {\n            // display: \"none\",\n            width: 0,\n          },\n        }),\n        [isCenter, slideWidth]\n      );\n\n    const goToIndex = (index: number, forwardOnly = false) => {\n      if (current === index) return;\n      let _index = index;\n      if (forwardOnly && current >= index) _index += props.slidesToShow;\n      setSpeed(0);\n      if (current < _index) {\n        //next n step\n        setStep(_index - current);\n        next(_index - current);\n        setTimeout(() => {\n          setSpeed(props.speed);\n          setStep(1);\n        }, (_index - current + 1) * (animationSpeed ?? 550));\n      } else {\n        setStep(current - _index);\n        prev(current - _index);\n        setTimeout(() => {\n          setSpeed(props.speed);\n          setStep(1);\n        }, (current - _index + 1) * (animationSpeed ?? 550));\n      }\n    };\n\n    return (\n      <Box sx={outerSx}>\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: `${gap}px`,\n            ml: `-${slideWidth + gap}px`,\n            mr: `-${slideWidth + gap}px`,\n            ...sx,\n          }}\n        >\n          <AnimatePresence initial={false}>\n            {newChildren.map((child, index) => {\n              return (\n                <MotionBox\n                  layout\n                  key={`${child.key}`}\n                  transition={{ duration: animationSpeed }}\n                  variants={variants}\n                  initial={\"initial\"}\n                  animate={\"animate\"}\n                  exit={\"exit\"}\n                  style={{ originX: 0.5, originY: 0.5 }}\n                  sx={{ display: \"flex\", justifyContent: \"center\" }}\n                  custom={{ index }}\n                  className={index === center ? \"center\" : \"\"}\n                >\n                  <MotionBox\n                    layout\n                    variants={innerVariants}\n                    transition={{ duration: animationSpeed }}\n                    custom={{ index }}\n                    style={{\n                      width: slideWidth,\n                    }}\n                  >\n                    {cloneElement(child, {\n                      onClick:\n                        child.props[\"data-index\"] * 1 === center\n                          ? child.props.onClick\n                          : () => {\n                              // console.log(child.props[\"data-index\"] * 1);\n                              goToIndex(child.props[\"data-index\"] * 1, true);\n                            },\n                    })}\n                  </MotionBox>\n                </MotionBox>\n              );\n            })}\n            {render?.(payload)}\n          </AnimatePresence>\n        </Box>\n        <Box sx={indicatorSxProps}>\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: `repeat(${total},1fr)`,\n              gridGap: \"2rem\",\n            }}\n          >\n            {range(total).map((index) => (\n              <Bullet\n                isActive={index === current}\n                onClick={() => {\n                  goToIndex(index);\n                }}\n              />\n            ))}\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n);\n\nconst MotionSlide = forwardRef<\n  MotionSlideHandle,\n  Omit<MotionSlideProps, \"size\">\n>(function (props, ref) {\n  return (\n    <SizeMe>\n      {({ size }) => <MotionSlideInner ref={ref} size={size} {...props} />}\n    </SizeMe>\n  );\n});\n\nexport default MotionSlide;\n","import {\n  Children,\n  cloneElement,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport produce, { Draft } from \"immer\";\nimport { range } from \"lodash\";\nimport { mod } from \"../commons/utils\";\n\nexport type UseCycledListOptions = {\n  size: number;\n};\ntype Callback = (step?: number) => void;\nexport type CycledListPayload = {\n  current: number;\n  actualCurrent: number;\n  direction: \"prev\" | \"next\";\n  total: number;\n};\n\nexport function useCycledList<T extends ReactElement>(\n  list: T[],\n  { size }: UseCycledListOptions\n): [T[], Callback, Callback, CycledListPayload] {\n  const doubledList = useRef([\n    ...list,\n    ...(Children.map(list, (child, i) =>\n      cloneElement(child, { key: `cloned__${i}` })\n    ) as unknown as T[]),\n  ]);\n  const [returnedList, setReturnedList] = useState<T[]>(() =>\n      doubledList.current.slice(0, size)\n    ),\n    [pos, setPos] = useState(size - 1),\n    [direction, setDirection] = useState<\"prev\" | \"next\">(\"next\");\n  const middle = useMemo(() => {\n    let rs = pos - (size - 1) / 2;\n    if (rs < 0) rs += list.length;\n    if (rs >= list.length) rs -= list.length;\n    return rs;\n  }, [pos, size, list.length]);\n\n  const next = useCallback(\n    (step: number = 1) => {\n      const newPos = (pos + step) % doubledList.current.length;\n      const newReturnedList = produce(returnedList, (draft) => {\n        range(step).forEach(() => draft.shift());\n        range(step).forEach((i: number) => {\n          const _newPos = (pos + i + 1) % doubledList.current.length;\n          draft.push(doubledList.current[_newPos] as unknown as Draft<T>);\n        });\n      });\n      setDirection(\"next\");\n      setPos(newPos);\n      setReturnedList(newReturnedList);\n    },\n    [returnedList, pos]\n  );\n\n  const previous = useCallback(\n    (step: number = 1) => {\n      let newPos = pos - step;\n      if (newPos < 0) newPos += doubledList.current.length;\n      let headPos = pos - size;\n      const newReturnedList = produce(returnedList, (draft) => {\n        range(step).forEach(() => draft.pop());\n        range(step).forEach(() => {\n          headPos--;\n          if (headPos < 0) headPos += doubledList.current.length;\n          draft.unshift(doubledList.current[headPos] as unknown as Draft<T>);\n        });\n      });\n      setDirection(\"prev\");\n      setPos(newPos);\n      setReturnedList(newReturnedList);\n    },\n    [pos, size, returnedList]\n  );\n\n  return [\n    returnedList,\n    previous,\n    next,\n    {\n      current: middle,\n      actualCurrent: mod(middle - 1, size),\n      direction,\n      total: list.length,\n    },\n  ];\n}\n","export function mod(n: number, m: number) {\n  return ((n % m) + m) % m;\n}\n","import { SlideThuVienProps } from \"./types\";\nimport useWindowDimensions from \"../commons/responsives\";\nimport { Box } from \"@mui/material\";\nimport MotionSlide from \"../slide-dautuhoanmy/motion-slide\";\nimport AspectRatio from \"../commons/AspectRatio\";\n\nexport default function Desktop({ list }: SlideThuVienProps): JSX.Element {\n  const { width, height } = useWindowDimensions();\n  return (\n    <>\n      <Box\n        sx={{\n          width: \"100vw\",\n          height: \"100vh\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          overflow: \"hidden\",\n        }}\n      >\n        <MotionSlide\n          slidesToShow={1}\n          speed={3000}\n          animationSpeed={0.6}\n          indicatorSxProps={{\n            width: \"auto\",\n            pb: 4,\n            alignSelf: \"center\",\n          }}\n          outerSx={{ display: \"flex\", flexDirection: \"column\" }}\n        >\n          {list.map((item, index) => (\n            <AspectRatio\n              key={item.id}\n              data-key={item.id}\n              data-index={index}\n              ratio={`${width}/${height}`}\n            >\n              <img src={item.image} />\n            </AspectRatio>\n          ))}\n        </MotionSlide>\n      </Box>\n    </>\n  );\n}\n"],"sourceRoot":""}